name: Deploy Storybook to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Storybook
        run: yarn build-storybook:gh-pages

      - name: Add .nojekyll file
        run: touch ./storybook-static/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './storybook-static'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment on PR with Storybook link
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const deploymentUrl = 'https://cleissonb.github.io/asl-viewer/';
            
            // Get recent PRs that might be related to this push
            const { data: prs } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              per_page: 5
            });
            
            for (const pr of prs) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr.number,
                body: `ðŸš€ Storybook has been updated and deployed to: ${deploymentUrl}\n\nYou can now preview the latest changes in the interactive documentation.`
              });
            }
