name: Publish Beta

on:
  push:
    branches:
      - development
      - beta
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Build project
        run: yarn build

  publish-beta:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/beta'
    permissions:
      contents: write
      id-token: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Generate beta version
        id: beta_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          BETA_VERSION="${CURRENT_VERSION}-beta.${TIMESTAMP}.${COMMIT_HASH}"
          echo "BETA_VERSION=${BETA_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated beta version: ${BETA_VERSION}"

      - name: Update package.json version
        run: |
          npm version ${{ steps.beta_version.outputs.BETA_VERSION }} --no-git-tag-version

      - name: Publish beta to NPM
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: github.event_name != 'workflow_dispatch'
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.beta_version.outputs.BETA_VERSION }}"
          name: Release ${{ steps.beta_version.outputs.BETA_VERSION }}
          generateReleaseNotes: true
          prerelease: true
          commit: ${{ github.sha }}